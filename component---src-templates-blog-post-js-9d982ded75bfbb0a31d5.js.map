{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","className","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel"],"mappings":"2FAAA,gFAkEeA,UA3DU,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACxBC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACI,kBAAC,IAAD,CAAQR,SAAUA,EAAUM,MAAOH,GAC/B,kBAAC,IAAD,CACIG,MAAOL,EAAKQ,YAAYH,MACxBI,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,UAEtD,6BACIC,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,gCACI,wBAAIC,SAAS,YAAYd,EAAKQ,YAAYH,OAC1C,2BAAIL,EAAKQ,YAAYO,OAEzB,6BACIC,wBAAyB,CAAEC,OAAQjB,EAAKkB,MACxCJ,SAAS,gBAEb,6BACA,gCACI,kBAAC,IAAD,QAGR,yBAAKH,UAAU,iBACX,wBACIQ,MAAO,CACHC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGb,4BACKlB,GACG,kBAAC,OAAD,CAAMmB,GAAInB,EAASoB,OAAOC,KAAMC,IAAI,QAApC,KACOtB,EAASE,YAAYH,QAIpC,4BACKE,GACG,kBAAC,OAAD,CAAMkB,GAAIlB,EAAKmB,OAAOC,KAAMC,IAAI,QAC3BrB,EAAKC,YAAYH,MADtB","file":"component---src-templates-blog-post-js-9d982ded75bfbb0a31d5.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n    const post = data.markdownRemark\n    const siteTitle = data.site.siteMetadata?.title || `Title`\n    const { previous, next } = data\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <SEO\n                title={post.frontmatter.title}\n                description={post.frontmatter.description || post.excerpt}\n            />\n            <article\n                className=\"blog-post\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n            >\n                <header>\n                    <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n                    <p>{post.frontmatter.date}</p>\n                </header>\n                <section\n                    dangerouslySetInnerHTML={{ __html: post.html }}\n                    itemProp=\"articleBody\"\n                />\n                <hr />\n                <footer>\n                    <Bio />\n                </footer>\n            </article>\n            <nav className=\"blog-post-nav\">\n                <ul\n                    style={{\n                        display: `flex`,\n                        flexWrap: `wrap`,\n                        justifyContent: `space-between`,\n                        listStyle: `none`,\n                        padding: 0,\n                    }}\n                >\n                    <li>\n                        {previous && (\n                            <Link to={previous.fields.slug} rel=\"prev\">\n                                ← {previous.frontmatter.title}\n                            </Link>\n                        )}\n                    </li>\n                    <li>\n                        {next && (\n                            <Link to={next.fields.slug} rel=\"next\">\n                                {next.frontmatter.title} →\n                            </Link>\n                        )}\n                    </li>\n                </ul>\n            </nav>\n        </Layout>\n    )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`"],"sourceRoot":""}